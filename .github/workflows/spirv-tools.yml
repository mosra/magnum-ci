name: SPIRV-Tools

on: [push, pull_request]

# Cancel in-progress builds on push to same branch / PR
# https://stackoverflow.com/a/72408109
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  SPIRV_VERSION: 1.5.3.reservations1
  VERSION: 2020.4

jobs:
  ubuntu:
    name: ${{ matrix.os }}-gcc${{ matrix.env.GCC }}
    runs-on: ${{ matrix.runs-on }}
    container: ${{ matrix.container }}
    strategy:
      matrix:
        include:
        - os: ubuntu-18.04
          runs-on: ubuntu-latest
          container: ubuntu:bionic-20220427
          env:
            GCC: 4.8
        - os: ubuntu-18.04
          runs-on: ubuntu-latest
          container: ubuntu:bionic-20220427
          env:
            GCC: 7
    steps:
    - name: Install base build tools
      # apt update is needed to fetch package lists; python is unconditionally
      # looked up by cmake because it's NEEDED FOR BUILDING TESTS FFS
      run: |
        apt update
        apt install -y ninja-build cmake g++-${{ matrix.env.GCC }} python3
    - name: Clone SPIRV-Tools
      uses: actions/checkout@v3
      with:
        repository: KhronosGroup/SPIRV-Tools
        ref: v${{ env.VERSION }}
        # FUCKING HELL, why this isn't the default and why it implicitly clones
        # to magnum-ci?! what the fuck?!
        path: SPIRV-Tools
    - name: Clone SPIRV-Headers
      uses: actions/checkout@v3
      with:
        repository: KhronosGroup/SPIRV-Headers
        ref: ${{ env.SPIRV_VERSION }}
        path: SPIRV-Tools/external/spirv-headers
    - name: Build & install
      run: |
        mkdir build && cd build
        cmake ../SPIRV-Tools \
          -DCMAKE_C_COMPILER=gcc-${{ matrix.env.GCC }} \
          -DCMAKE_CXX_COMPILER=g++-${{ matrix.env.GCC }} \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=$(pwd)/../install \
          -DSPIRV_SKIP_EXECUTABLES=ON \
          -G Ninja
        ninja install/strip
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: spirv-tools-${{ env.VERSION }}-${{ matrix.os }}-gcc${{ matrix.env.GCC }}
        path: install

  windows:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
    steps:
    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@v3
    - name: Set up Visual Studio environment
      uses: seanmiddleditch/gha-setup-vsdevenv@v3
    - name: Clone SPIRV-Tools
      uses: actions/checkout@v3
      with:
        repository: KhronosGroup/SPIRV-Tools
        ref: v${{ env.VERSION }}
        # FUCKING HELL, why this isn't the default and why it implicitly clones
        # to magnum-ci?! what the fuck?!
        path: SPIRV-Tools
    - name: Clone SPIRV-Headers
      uses: actions/checkout@v2
      with:
        repository: KhronosGroup/SPIRV-Headers
        ref: ${{ env.SPIRV_VERSION }}
        path: SPIRV-Tools/external/spirv-headers
    - name: Build & install Debug
      shell: cmd
      # -S and -B is only since CMake 3.13, Windows 2016 uses 3.12 even though
      # the README says 3.19.1
      run: |
        mkdir build-debug && cd build-debug
        cmake ../SPIRV-Tools ^
          -DCMAKE_C_COMPILER=cl.exe ^
          -DCMAKE_CXX_COMPILER=cl.exe ^
          -DCMAKE_BUILD_TYPE=Debug ^
          -DCMAKE_DEBUG_POSTFIX=-d ^
          -DCMAKE_INSTALL_PREFIX=%CD:\=/%/../install-debug ^
          -DSPIRV_SKIP_EXECUTABLES=ON ^
          -G Ninja
        ninja install
    - name: Build & install Release
      shell: cmd
      # -S and -B is only since CMake 3.13, Windows 2016 uses 3.12 even though
      # the README says 3.19.1
      run: |
        mkdir build && cd build
        cmake ../SPIRV-Tools ^
          -DCMAKE_C_COMPILER=cl.exe ^
          -DCMAKE_CXX_COMPILER=cl.exe ^
          -DCMAKE_BUILD_TYPE=Release ^
          -DCMAKE_INSTALL_PREFIX=%CD:\=/%/../install ^
          -DSPIRV_SKIP_EXECUTABLES=ON ^
          -G Ninja
        ninja install
    - name: Upload Debug artifacts
      uses: actions/upload-artifact@v1
      with:
        name: spirv-tools-${{ env.VERSION }}-${{ matrix.os }}-debug
        path: install-debug
    - name: Upload Release artifacts
      uses: actions/upload-artifact@v1
      with:
        name: spirv-tools-${{ env.VERSION }}-${{ matrix.os }}
        path: install
