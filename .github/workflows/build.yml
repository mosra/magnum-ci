name: SwiftShader

on: [push, pull_request]

env:
  # Ideally use a commit that's verified to work well elsewhere (Arch
  # swiftshader-git package, for example)
  COMMIT: a6940c8e6eb0c61c433ed4b61ae04c12ff37bfbb

# Mostly just copied from here, with ES1 disabled:
# https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=swiftshader-git
jobs:
  ubuntu-gles:
    name: GLES, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04]
    steps:
    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@v1
    - name: Clone SwiftShader
      uses: actions/checkout@v2
      with:
        repository: google/swiftshader
        ref: ${{ env.COMMIT }}
        path: swiftshader
        # Yeah, I know, but the repo has no tags, and we use number of commits
        # for SWIFTSHADER_VERSION.
        fetch-depth: 0
    - name: Init & update submodules, fetch version
      run: |
        git -C swiftshader submodule init
        git -C swiftshader submodule update
        SWIFTSHADER_VERSION="r$(git -C swiftshader rev-list --count HEAD).$(git -C swiftshader rev-parse --short=10 HEAD)"
        echo "version: $SWIFTSHADER_VERSION"
        echo "::set-env name=SWIFTSHADER_VERSION::$SWIFTSHADER_VERSION"
    - name: Configure
      run: |
        cmake \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DSWIFTSHADER_BUILD_GLES_CM=OFF \
          -DSWIFTSHADER_BUILD_GLESv2=ON \
          -DSWIFTSHADER_BUILD_VULKAN=OFF \
          -DSWIFTSHADER_BUILD_PVR=OFF \
          -DSWIFTSHADER_BUILD_TESTS=OFF \
          -DSWIFTSHADER_WARNINGS_AS_ERRORS=OFF \
          -S swiftshader -B build
    - name: Build
      run: |
        ninja -C build
    - name: Install
      run: |
        install -dm755 install/lib
        install -m755 -t install/lib \
          build/libEGL.so \
          build/libGLESv2.so
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: swiftshader-gles-${{ env.SWIFTSHADER_VERSION }}-${{ matrix.os }}
        path: install

  ubuntu-vulkan:
    name: Vulkan, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Vulkan libs don't build with GCC 5 on 16.04, use just 18.04
        os: [ubuntu-18.04]
    steps:
    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@v1
    - name: Clone SwiftShader
      uses: actions/checkout@v2
      with:
        repository: google/swiftshader
        ref: ${{ env.COMMIT }}
        path: swiftshader
        # Yeah, I know, but the repo has no tags, and we use number of commits
        # for SWIFTSHADER_VERSION.
        fetch-depth: 0
    - name: Init & update submodules, fetch version
      run: |
        git -C swiftshader submodule init
        git -C swiftshader submodule update
        SWIFTSHADER_VERSION="r$(git -C swiftshader rev-list --count HEAD).$(git -C swiftshader rev-parse --short=10 HEAD)"
        echo "version: $SWIFTSHADER_VERSION"
        echo "::set-env name=SWIFTSHADER_VERSION::$SWIFTSHADER_VERSION"
    - name: Configure
      run: |
        cmake \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DSWIFTSHADER_BUILD_GLES_CM=OFF \
          -DSWIFTSHADER_BUILD_GLESv2=OFF \
          -DSWIFTSHADER_BUILD_VULKAN=ON \
          -DSWIFTSHADER_BUILD_PVR=OFF \
          -DSWIFTSHADER_BUILD_TESTS=OFF \
          -DSWIFTSHADER_WARNINGS_AS_ERRORS=OFF \
          -S swiftshader -B build
    - name: Build
      run: |
        ninja -C build
    - name: Install
      run: |
        install -dm755 install/lib
        install -m755 -t install/lib \
          build/libvk_swiftshader.so

        install -dm755 install/share/vulkan/icd.d/
        install -m644 -t install/share/vulkan/icd.d/ \
          build/Linux/vk_swiftshader_icd.json
        sed 's#./libvk_swiftshader.so#../../../lib/libvk_swiftshader.so#' \
          -i install/share/vulkan/icd.d/vk_swiftshader_icd.json
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: swiftshader-vulkan-${{ env.SWIFTSHADER_VERSION }}-${{ matrix.os }}
        path: install

  mac:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15]
    steps:
    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@v1
    - name: Clone SwiftShader
      uses: actions/checkout@v2
      with:
        repository: google/swiftshader
        ref: ${{ env.COMMIT }}
        path: swiftshader
        # Yeah, I know, but the repo has no tags, and we use number of commits
        # for SWIFTSHADER_VERSION.
        fetch-depth: 0
    - name: Init & update submodules, fetch version
      run: |
        git -C swiftshader submodule init
        git -C swiftshader submodule update
        SWIFTSHADER_VERSION="r$(git -C swiftshader rev-list --count HEAD).$(git -C swiftshader rev-parse --short=10 HEAD)"
        echo "version: $SWIFTSHADER_VERSION"
        echo "::set-env name=SWIFTSHADER_VERSION::$SWIFTSHADER_VERSION"
    - name: Configure
      run: |
        cmake \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DSWIFTSHADER_BUILD_GLES_CM=OFF \
          -DSWIFTSHADER_BUILD_GLESv2=ON \
          -DSWIFTSHADER_BUILD_VULKAN=ON \
          -DSWIFTSHADER_BUILD_PVR=OFF \
          -DSWIFTSHADER_BUILD_TESTS=OFF \
          -DSWIFTSHADER_WARNINGS_AS_ERRORS=OFF \
          -S swiftshader -B build
    - name: Build
      run: |
        ninja -C build
    - name: Install
      run: |
        install -dm755 install/lib
        # There's no install -t on macOS
        install -m755 \
          build/libEGL.dylib \
          build/libGLESv2.dylib \
          build/libvk_swiftshader.dylib \
          install/lib

        install -dm755 install/share/vulkan/icd.d/
        install -m644 build/Darwin/vk_swiftshader_icd.json \
          install/share/vulkan/icd.d/
        # There's no sed -i on macOS, need to provide an extension and then
        # delete the backup
        sed -e 's#./libvk_swiftshader.dylib#../../../lib/libvk_swiftshader.dylib#' \
          -i'.old' install/share/vulkan/icd.d/vk_swiftshader_icd.json
        rm install/share/vulkan/icd.d/vk_swiftshader_icd.json.old
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: swiftshader-${{ env.SWIFTSHADER_VERSION }}-${{ matrix.os }}
        path: install

  windows:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
    steps:
    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@v1
    - name: Set up Visual Studio environment
      uses: seanmiddleditch/gha-setup-vsdevenv@v1
    - name: Clone SwiftShader
      uses: actions/checkout@v2
      with:
        repository: google/swiftshader
        ref: ${{ env.COMMIT }}
        path: swiftshader
        # Yeah, I know, but the repo has no tags, and we use number of commits
        # for SWIFTSHADER_VERSION.
        fetch-depth: 0
    - name: Init & update submodules, fetch version
      run: |
        git -C swiftshader submodule init
        git -C swiftshader submodule update
        $SWIFTSHADER_VERSION="r$(git -C swiftshader rev-list --count HEAD).$(git -C swiftshader rev-parse --short=10 HEAD)"
        echo "version: $SWIFTSHADER_VERSION"
        echo "::set-env name=SWIFTSHADER_VERSION::$SWIFTSHADER_VERSION"
    - name: Configure
      run: |
        cmake `
          -G Ninja `
          -DCMAKE_C_COMPILER=cl.exe `
          -DCMAKE_CXX_COMPILER=cl.exe `
          -DCMAKE_BUILD_TYPE=Release `
          -DSWIFTSHADER_BUILD_GLES_CM=OFF `
          -DSWIFTSHADER_BUILD_GLESv2=ON `
          -DSWIFTSHADER_BUILD_VULKAN=ON `
          -DSWIFTSHADER_BUILD_PVR=OFF `
          -DSWIFTSHADER_BUILD_TESTS=OFF `
          -DSWIFTSHADER_WARNINGS_AS_ERRORS=OFF `
          -S swiftshader -B build
    - name: Build
      run: |
        ninja -C build
    - name: Install
      run: |
        mkdir install\bin
        mkdir install\lib
        mkdir install\share\vulkan\icd.d

        copy build\libEGL.dll install\bin\
        copy build\src\OpenGL\libEGL\libEGL.lib install\lib\
        copy build\libGLESv2.dll install\bin\
        copy build\src\OpenGL\libGLESv2\libGLESv2.lib install\lib\
        copy build\vk_swiftshader.dll install\bin\
        copy build\src\Vulkan\vk_swiftshader.lib install\lib\

        (Get-Content build\Windows\vk_swiftshader_icd.json) `
          -replace '\.\\\\vk_swiftshader\.dll', '..\\..\\..\\bin\\vk_swiftshader.dll' `
          | Out-File -encoding UTF8 install\share\vulkan\icd.d\vk_swiftshader_icd.json
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: swiftshader-${{ env.SWIFTSHADER_VERSION }}-${{ matrix.os }}
        path: install
